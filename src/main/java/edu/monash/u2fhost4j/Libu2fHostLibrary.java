/*
 * @copyright Monash University 2019
 * @author Darren Cocco (https://blog.segfault.id.au)
 * @licence LGPL v2.1
 */
package edu.monash.u2fhost4j;

import com.ochafik.lang.jnaerator.runtime.NativeSizeByReference;
import com.sun.jna.*;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.PointerByReference;

/**
 * JNA Wrapper for library <b>libu2f-host</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Libu2fHostLibrary extends Library {
    public static final String JNA_LIBRARY_NAME = "libu2f-host";
    public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Libu2fHostLibrary.JNA_LIBRARY_NAME);
    public static final Libu2fHostLibrary INSTANCE = (Libu2fHostLibrary)Native.load(Libu2fHostLibrary.JNA_LIBRARY_NAME, Libu2fHostLibrary.class);
    /**
     * <i>native declaration : u2f-host-types.h</i><br>
     * enum values
     */
    public static interface u2fh_rc {
        /** <i>native declaration : u2f-host-types.h:36</i> */
        public static final int U2FH_OK = 0;
        /** <i>native declaration : u2f-host-types.h:37</i> */
        public static final int U2FH_MEMORY_ERROR = -1;
        /** <i>native declaration : u2f-host-types.h:38</i> */
        public static final int U2FH_TRANSPORT_ERROR = -2;
        /** <i>native declaration : u2f-host-types.h:39</i> */
        public static final int U2FH_JSON_ERROR = -3;
        /** <i>native declaration : u2f-host-types.h:40</i> */
        public static final int U2FH_BASE64_ERROR = -4;
        /** <i>native declaration : u2f-host-types.h:41</i> */
        public static final int U2FH_NO_U2F_DEVICE = -5;
        /** <i>native declaration : u2f-host-types.h:42</i> */
        public static final int U2FH_AUTHENTICATOR_ERROR = -6;
        /** <i>native declaration : u2f-host-types.h:43</i> */
        public static final int U2FH_TIMEOUT_ERROR = -7;
        /** <i>native declaration : u2f-host-types.h:44</i> */
        public static final int U2FH_SIZE_ERROR = -8;
    };
    /**
     * <i>native declaration : u2f-host-types.h</i><br>
     * enum values
     */
    public static interface u2fh_initflags {
        /** <i>native declaration : u2f-host-types.h:55</i> */
        public static final int U2FH_DEBUG = 1;
    };
    /**
     * <i>native declaration : u2f-host-types.h</i><br>
     * enum values
     */
    public static interface u2fh_cmdflags {
        /** <i>native declaration : u2f-host-types.h:66</i> */
        public static final int U2FH_REQUEST_USER_PRESENCE = 1;
    };
    /** <i>native declaration : u2f-host-version.h</i> */
    public static final String U2FH_VERSION_STRING = (String)"1.1.6";
    /** <i>native declaration : u2f-host-version.h</i> */
    public static final int U2FH_VERSION_NUMBER = (int)0x010106;
    /** <i>native declaration : u2f-host-version.h</i> */
    public static final int U2FH_VERSION_MAJOR = (int)1;
    /** <i>native declaration : u2f-host-version.h</i> */
    public static final int U2FH_VERSION_MINOR = (int)1;
    /** <i>native declaration : u2f-host-version.h</i> */
    public static final int U2FH_VERSION_PATCH = (int)6;
    /**
     * U2FH_VERSION_PATCH<br>
     * Pre-processor symbol with a decimal value that describe the patch<br>
     * level of the header file version number.  For example, when the<br>
     * header version is 1.2.3 this symbol will be 3.<br>
     * Original signature : <code>char* u2fh_check_version(const char*)</code><br>
     * <i>native declaration : u2f-host-version.h:72</i><br>
     */
    String u2fh_check_version(Pointer req_version);
    /**
     * Must be called successfully before using any other functions.<br>
     * Original signature : <code>u2fh_rc u2fh_global_init(u2fh_initflags)</code><br>
     * <i>native declaration : u2f-host.h:43</i>
     */
    int u2fh_global_init(int flags);
    /**
     * Original signature : <code>void u2fh_global_done()</code><br>
     * <i>native declaration : u2f-host.h:44</i>
     */
    void u2fh_global_done();
    /**
     * Original signature : <code>char* u2fh_strerror(int)</code><br>
     * <i>native declaration : u2f-host.h:46</i>
     */
    Pointer u2fh_strerror(int err);
    /**
     * Original signature : <code>char* u2fh_strerror_name(int)</code><br>
     * <i>native declaration : u2f-host.h:47</i>
     */
    Pointer u2fh_strerror_name(int err);
    /**
     * Original signature : <code>u2fh_rc u2fh_devs_init(u2fh_devs**)</code><br>
     * <i>native declaration : u2f-host.h:49</i>
     */
    int u2fh_devs_init(PointerByReference devs);
    /**
     * Original signature : <code>u2fh_rc u2fh_devs_discover(u2fh_devs*, unsigned*)</code><br>
     * <i>native declaration : u2f-host.h:50</i><br>
     */
    int u2fh_devs_discover(Pointer devs, IntByReference max_index);
    /**
     * Original signature : <code>void u2fh_devs_done(u2fh_devs*)</code><br>
     * <i>native declaration : u2f-host.h:51</i><br>
     */
    void u2fh_devs_done(Pointer devs);
    /**
     * Original signature : <code>u2fh_rc u2fh_register2(u2fh_devs*, const char*, const char*, char*, size_t*, u2fh_cmdflags)</code><br>
     * <i>native declaration : u2f-host.h:58</i><br>
     */
    int u2fh_register2(Pointer devs, Pointer challenge, Pointer origin, Pointer response, NativeSizeByReference response_len, int flags);
    /**
     * Original signature : <code>u2fh_rc u2fh_authenticate2(u2fh_devs*, const char*, const char*, char*, size_t*, u2fh_cmdflags)</code><br>
     * <i>native declaration : u2f-host.h:69</i><br>
     */
    int u2fh_authenticate2(Pointer devs, String challenge, String origin, Pointer response, NativeSizeByReference response_len, int flags);
    /**
     * Original signature : <code>u2fh_rc u2fh_sendrecv(u2fh_devs*, unsigned, uint8_t, const unsigned char*, uint16_t, unsigned char*, size_t*)</code><br>
     * <i>native declaration : u2f-host.h:75</i><br>
     */
    int u2fh_sendrecv(Pointer devs, int index, byte cmd, Pointer send, short sendlen, Pointer recv, NativeSizeByReference recvlen);
    /**
     * Original signature : <code>u2fh_rc u2fh_get_device_description(u2fh_devs*, unsigned, char*, size_t*)</code><br>
     * <i>native declaration : u2f-host.h:82</i><br>
     */
    int u2fh_get_device_description(Pointer devs, int index, Pointer out, NativeSizeByReference len);
    /**
     * Original signature : <code>int u2fh_is_alive(u2fh_devs*, unsigned)</code><br>
     * <i>native declaration : u2f-host.h:86</i><br>
     */
    int u2fh_is_alive(Pointer devs, int index);
    public static class u2fh_devs extends PointerType {
        public u2fh_devs(Pointer address) {
            super(address);
        }
        public u2fh_devs() {
            super();
        }
    };
}